# ### COVERAGE ###
[tool.coverage.run]
branch = true
source = [
  "penthouse",
  "tests"
]
omit = [
  "*/__init__.py",
  "*/migrations/*",
  "*/tests/util/*",
  "*/tests/runtests.py"
]

[tool.coverage.report]
precision = 1
show_missing = true
fail_under = 95


# ### DJLINT ###
[tool.djlint]
ignore = "T028,H030,H031"


# ### DOC8 ###
[tool.doc8]
# Just use doc8's default configuration


# ### ISORT ###
[tool.isort]
profile = "black"
# include_trailing_comma = true # included in profile "black" & "django"
# force_grid_wrap = true # included in profile "black"
# multi_line_output = 3 # included in profile "black"; 5 in "django"
# use_parantheses = true # included in profile "black"
# ensure_newline_before_comments = true # included in profile "black"
# line_length = 88 # included in profile "black", 79 in "django"
combine_as_imports = true # included in profile "django"
default_section = "THIRDPARTY"

known_first_party = "penthouse"
known_django = "django"
sections = [
  "FUTURE",
  "STDLIB",
  "DJANGO",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER"
]
import_heading_stdlib = "Python imports"
import_heading_django = "Django imports"
import_heading_firstparty = "app imports"
import_heading_localfolder = "local imports"
import_heading_thirdparty = "external imports"
skip_glob = [
  ".env",
  ".tox",
  "*/migrations/*",
  "settings_dev.py"
]

# ### TOX configuration
#
# ``tox`` is run to manage different virtual environments for different tasks.
# It is **not** used for its main purpose of running tests with different
# environments.
#
# Please note that ``tox`` >= 4.1 will support ``pyproject.toml`` natively, so
# this configuration will have to be adjusted, probably heavily.
[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.26.0

[testenv:pre-commit]
basepython = python3
deps =
  -r {toxinidir}/requirements/pre-commit.txt
envdir = {toxworkdir}/pre-commit
setenv =
  PYTHONDONTWRITEBYTECODE=1
passenv = SSH_AUTH_SOCK
skip_install = true
commands =
  {posargs:pre-commit run}

[testenv:pip-tools]
basepython = python3
deps =
  -r {toxinidir}/requirements/pip-tools.txt
envdir = {toxworkdir}/pip-tools
setenv =
  PYTHONDONTWRITEBYTECODE=1
skip_install = true
commands =
  pip-compile --resolver=backtracking {posargs}

[testenv:django]
basepython = python3
deps =
  -r {toxinidir}/requirements/development.txt
envdir = {toxworkdir}/django
setenv =
  PYTHONDONTWRITEBYTECODE=1
skip_install = true
commands =
  django-admin {posargs:version} --settings=tests.util.settings_dev --pythonpath=./

[testenv:djangosuperuser]
basepython = {[testenv:django]basepython}
deps = {[testenv:django]deps}
envdir = {[testenv:django]envdir}
setenv =
  PYTHONDONTWRITEBYTECODE=1
  DJANGO_SUPERUSER_USERNAME=admin
  DJANGO_SUPERUSER_EMAIL=admin@root.local
  DJANGO_SUPERUSER_PASSWORD=foobar
skip_install = {[testenv:django]skip_install}
commands =
  django-admin createsuperuser --noinput --settings=tests.util.settings_dev --pythonpath=./

[testenv:util]
basepython = python3
deps =
  -r {toxinidir}/requirements/util.txt
envdir = {toxworkdir}/util
setenv =
  PYTHONDONTWRITEBYTECODE=1
skip_install = true
commands =
  {posargs:pre-commit run}
"""
